{"version":3,"sources":["components/CartItem/CartItem.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/Cart/CartScreen.js","components/Product/Product.js","redux/constants/productConstants.js","screens/Home/HomeScreen.js","redux/actions/productActions.js","screens/Product/ProductScreen.js","components/Nav/Navbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/cartReducers.js","redux/reducers/productReducers.js","index.js"],"names":["CartItem","item","qtyChangeHandler","deleteFromCart","className","src","imageUrl","alt","name","to","product","price","value","qty","onChange","e","target","Array","countInStock","keys","map","x","onClick","icon","faTrash","ADD_TO_CART","REMOVE_FROM_CART","addToCart","id","dispatch","getState","a","axios","get","data","type","actionTypes","payload","_id","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CartScreen","useDispatch","useSelector","state","length","reduce","Number","toFixed","Product","description","productId","substring","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","getProducts","products","loading","error","useEffect","response","message","ProductScreen","match","history","useState","setQty","productDetails","getProductDetails","params","push","Navbar","click","faShoppingCart","faBars","Backdrop","show","SideDrawer","sideDrawerClass","join","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9492e1d.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons/faTrash'\r\nimport './CartItem.css';\r\n\r\nconst CartItem = ({item, qtyChangeHandler, deleteFromCart}) => {\r\n    return (\r\n        <div className=\"cartitem\">\r\n            <div className=\"cartitem__image\">\r\n                <img src={item.imageUrl} alt={item.name} />\r\n            </div>\r\n            <Link to={`/product/${item.product}`} className=\"cartitem__name\">\r\n                <p>{item.name}</p>\r\n            </Link>\r\n            <p className=\"cartitem__price\">${item.price}</p>\r\n            <select className=\"cartitem__select\" value={item.qty} onChange={(e)=> qtyChangeHandler(item.product, e.target.value)}>\r\n                {[...Array(item.countInStock).keys()].map(x => (\r\n                    <option key={x+1} value={x+1}>{x+1}</option>\r\n                ))}\r\n            </select>\r\n            <button className=\"cartitem__deleteBtn\" onClick={() => deleteFromCart(item.product)}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";","import * as actionTypes from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      imageUrl: data.imageUrl,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};","import {useDispatch, useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport { addToCart, removeFromCart } from '../../redux/actions/cartActions';\r\nimport './CartScreen.css';\r\n\r\nconst CartScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty))\r\n    }\r\n\r\n    const deleteFromCart = (id) => [\r\n        dispatch(removeFromCart(id))\r\n    ]\r\n\r\n    const getcartCount = () => {\r\n        return cartItems.reduce((qty,item) => Number(item.qty) + qty, 0)\r\n    }\r\n\r\n    const getCartSubTotal = () => {\r\n        return cartItems.reduce((price, item) => (item.price * item.qty) + price, 0)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cartscreen\">\r\n            <div className=\"cartscreen__left\">\r\n                <h2>Your Cart:</h2>\r\n                {cartItems.length === 0 ? (\r\n                    <div>\r\n                        Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n                    </div>\r\n                ) : cartItems.map(item =>(\r\n                    <CartItem key={item.product} item={item} deleteFromCart={deleteFromCart} qtyChangeHandler={qtyChangeHandler} />\r\n                ))}\r\n            </div>\r\n            <div className=\"cartscreen__right\">\r\n                <div className=\"cartscreen__info\">\r\n                    <p>{getcartCount()} items in your cart</p>\r\n                    <p>Total ${getCartSubTotal().toFixed(2)}</p>\r\n                </div>\r\n                <div>\r\n                    <button>Proceed To Checkout</button>\r\n                    <Link to=\"/\">\r\n                        <button>Continue Shopping</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import {Link} from 'react-router-dom';\r\nimport './Product.css';\r\n\r\nconst Product = ({imageUrl, name, price, description, productId}) => {\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={imageUrl} alt={name} />\r\n            <div className=\"product__info\">\r\n                <p className=\"info__name\">{name}</p>\r\n                <p className=\"info__description\">{description.substring(0,100)}...</p>\r\n                <p className=\"info__price\">${price}</p>\r\n                <Link to={`/product/${productId}`} className=\"info__button\">View Product</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";","import {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Product from '../../components/Product/Product';\r\nimport {getProducts as listProducts} from '../../redux/actions/productActions';\r\nimport './HomeScreen.css';\r\n\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getProducts = useSelector((state) => state.getProducts);\r\n    const {products, loading, error} = getProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen__title\">Latest Products</h2>\r\n            <div className=\"homescreen__products\">\r\n                {loading ? <h2>Loading...</h2> : error ? <h2>{error}</h2> : products.map(product => (\r\n                    <Product \r\n                    key={product._id} \r\n                    productId={product._id} \r\n                    name={product.name}\r\n                    price={product.price}\r\n                    description={product.description}\r\n                    imageUrl={product.imageUrl}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: actionTypes.GET_PRODUCTS_REQUEST});\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type:actionTypes.GET_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: actionTypes.GET_PRODUCT_DETAILS_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type:actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch({\r\n        type:actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    })\r\n};","import {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getProductDetails} from '../../redux/actions/productActions';\r\nimport {addToCart} from '../../redux/actions/cartActions';\r\n\r\nimport './ProductScreen.css';\r\n\r\nconst ProductScreen = ({match,history}) => {\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n  \r\n    const productDetails = useSelector((state) => state.getProductDetails);\r\n    const { loading, error, product } = productDetails;\r\n  \r\n    useEffect(() => {\r\n      if (product && match.params.id !== product._id) {\r\n        dispatch(getProductDetails(match.params.id));\r\n      }\r\n    }, [dispatch, match, product]);\r\n  \r\n    const addToCartHandler = () => {\r\n      dispatch(addToCart(product._id, qty));\r\n      history.push(`/cart`);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"productscreen\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : error ? (\r\n            <h2>{error}</h2>\r\n          ) : (\r\n            <>\r\n              <div className=\"productscreen__left\">\r\n                <div className=\"left__image\">\r\n                  <img src={product.imageUrl} alt={product.name} />\r\n                </div>\r\n                <div className=\"left__info\">\r\n                  <p className=\"left__name\">{product.name}</p>\r\n                  <p>Price: ${product.price}</p>\r\n                  <p>Description: {product.description}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"productscreen__right\">\r\n                <div className=\"right__info\">\r\n                  <p>\r\n                    Price:\r\n                    <span>${product.price}</span>\r\n                  </p>\r\n                  <p>\r\n                    Status:\r\n                    <span>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    Qty\r\n                    <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                      {[...Array(product.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </p>\r\n                  <p>\r\n                    <button type=\"button\" onClick={addToCartHandler}>\r\n                      Add To Cart\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default ProductScreen\r\n","import {Link} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons/faBars';\r\nimport {faShoppingCart} from '@fortawesome/free-solid-svg-icons/faShoppingCart';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = ({click}) => {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const getcartCount =() => {\r\n        return cartItems.reduce((qty, item) => qty + Number(item.qty), 0)\r\n    }\r\n    return (\r\n        <nav className=\"navbar\">\r\n        <div className=\"navbar__logo\">\r\n            <Link className=\"nav__name\" to=\"/\">\r\n                <h2>Psi Shop</h2>\r\n            </Link>\r\n        </div>\r\n        <ul className=\"navbar__links\">\r\n            <li>\r\n                <Link to=\"/cart\" className=\"cart__link\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span>\r\n                        Cart\r\n                        <span className=\"cartlogo__badge\">{getcartCount()}</span>\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/\">\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n        <div className=\"hamburger__menu\" onClick={click}>\r\n        <FontAwesomeIcon icon={faBars} />\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './Backdrop.css';\r\n\r\nconst Backdrop = ({show, click}) => {\r\n    return show && <div className=\"backdrop\" onClick={click}></div>;\r\n}\r\n\r\nexport default Backdrop\r\n","import {Link} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faShoppingCart} from '@fortawesome/free-solid-svg-icons/faShoppingCart';\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = ({show, click}) => {\r\n    const sideDrawerClass = [\"sidedrawer\"];\r\n    if(show){\r\n        sideDrawerClass.push(\"show\");\r\n    }\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const getcartCount =() => {\r\n        return cartItems.reduce((qty, item) => qty + Number(item.qty), 0)\r\n    }\r\n    return <div className={sideDrawerClass.join(\" \")}>\r\n        <ul className=\"sidedrawer__links\" onClick={click}>\r\n            <li>\r\n                <Link to=\"/cart\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span>\r\n                        Cart\r\n                        <span className=\"sidedrawer__cartbadge\">{getcartCount()}</span>\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/\">Shop</Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default SideDrawer\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useState} from 'react';\nimport CartScreen from './screens/Cart/CartScreen';\nimport HomeScreen from './screens/Home/HomeScreen';\nimport ProductScreen from './screens/Product/ProductScreen';\nimport Navbar from './components/Nav/Navbar';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport './App.css';\n\nfunction App() {\n\n  const [sideToggle, setSideToggle] = useState(false);\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\n          <Route exact path=\"/cart\" component={CartScreen} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {cartReducer} from './reducers/cartReducers';\r\nimport {getProducDetailsReducer, getProductsReducer} from './reducers/productReducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts:getProductsReducer,\r\n    getProductDetails:getProducDetailsReducer,\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer,INITIAL_STATE,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = {cartItems: []}, action) => {\r\n    switch(action.type){\r\n       case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                }\r\n            }\r\n\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = {products: []}, action) => {\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return{\r\n                loading: true,\r\n                products:[],\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                products: action.payload,\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProducDetailsReducer = (state = {product:{}},action) =>{\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return{\r\n                loading:true,\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                product:action.payload,\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return{\r\n                product:{},\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}